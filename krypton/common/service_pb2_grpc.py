# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from krypton.common import message_pb2 as krypton_dot_common_dot_message__pb2


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authList = channel.unary_unary(
                '/AuthService/authList',
                request_serializer=krypton_dot_common_dot_message__pb2.AuthListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.AuthListResponse.FromString,
                )
        self.signIn = channel.unary_unary(
                '/AuthService/signIn',
                request_serializer=krypton_dot_common_dot_message__pb2.SignInRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.SignInResponse.FromString,
                )
        self.signOut = channel.unary_unary(
                '/AuthService/signOut',
                request_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.changePassword = channel.unary_unary(
                '/AuthService/changePassword',
                request_serializer=krypton_dot_common_dot_message__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def signIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def signOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authList': grpc.unary_unary_rpc_method_handler(
                    servicer.authList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.AuthListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.AuthListResponse.SerializeToString,
            ),
            'signIn': grpc.unary_unary_rpc_method_handler(
                    servicer.signIn,
                    request_deserializer=krypton_dot_common_dot_message__pb2.SignInRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.SignInResponse.SerializeToString,
            ),
            'signOut': grpc.unary_unary_rpc_method_handler(
                    servicer.signOut,
                    request_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'changePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.changePassword,
                    request_deserializer=krypton_dot_common_dot_message__pb2.ChangePasswordRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthService/authList',
            krypton_dot_common_dot_message__pb2.AuthListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.AuthListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def signIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthService/signIn',
            krypton_dot_common_dot_message__pb2.SignInRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.SignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def signOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthService/signOut',
            krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthService/changePassword',
            krypton_dot_common_dot_message__pb2.ChangePasswordRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AuthSessionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authSessionList = channel.unary_unary(
                '/AuthSessionService/authSessionList',
                request_serializer=krypton_dot_common_dot_message__pb2.AuthSessionListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.AuthSessionListResponse.FromString,
                )


class AuthSessionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authSessionList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthSessionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authSessionList': grpc.unary_unary_rpc_method_handler(
                    servicer.authSessionList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.AuthSessionListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.AuthSessionListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AuthSessionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthSessionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authSessionList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthSessionService/authSessionList',
            krypton_dot_common_dot_message__pb2.AuthSessionListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.AuthSessionListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FileObjectServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.fileObjectCreate = channel.unary_unary(
                '/FileObjectService/fileObjectCreate',
                request_serializer=krypton_dot_common_dot_message__pb2.FileObjectCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.fileObjectRead = channel.unary_unary(
                '/FileObjectService/fileObjectRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.FileObjectReadResponse.FromString,
                )
        self.fileObjectUpdate = channel.unary_unary(
                '/FileObjectService/fileObjectUpdate',
                request_serializer=krypton_dot_common_dot_message__pb2.FileObjectUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.fileObjectDelete = channel.unary_unary(
                '/FileObjectService/fileObjectDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.fileObjectList = channel.unary_unary(
                '/FileObjectService/fileObjectList',
                request_serializer=krypton_dot_common_dot_message__pb2.FileObjectListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.FileObjectListResponse.FromString,
                )
        self.fileObjectActivityLogList = channel.unary_unary(
                '/FileObjectService/fileObjectActivityLogList',
                request_serializer=krypton_dot_common_dot_message__pb2.FileObjectActivityLogListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.FileObjectActivityLogListResponse.FromString,
                )


class FileObjectServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def fileObjectCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileObjectRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileObjectUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileObjectDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileObjectList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileObjectActivityLogList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileObjectServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'fileObjectCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectCreate,
                    request_deserializer=krypton_dot_common_dot_message__pb2.FileObjectCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'fileObjectRead': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.FileObjectReadResponse.SerializeToString,
            ),
            'fileObjectUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectUpdate,
                    request_deserializer=krypton_dot_common_dot_message__pb2.FileObjectUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'fileObjectDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'fileObjectList': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.FileObjectListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.FileObjectListResponse.SerializeToString,
            ),
            'fileObjectActivityLogList': grpc.unary_unary_rpc_method_handler(
                    servicer.fileObjectActivityLogList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.FileObjectActivityLogListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.FileObjectActivityLogListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FileObjectService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileObjectService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def fileObjectCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectCreate',
            krypton_dot_common_dot_message__pb2.FileObjectCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fileObjectRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.FileObjectReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fileObjectUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectUpdate',
            krypton_dot_common_dot_message__pb2.FileObjectUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fileObjectDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fileObjectList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectList',
            krypton_dot_common_dot_message__pb2.FileObjectListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.FileObjectListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fileObjectActivityLogList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileObjectService/fileObjectActivityLogList',
            krypton_dot_common_dot_message__pb2.FileObjectActivityLogListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.FileObjectActivityLogListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TagsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.tagsCreate = channel.unary_unary(
                '/TagsService/tagsCreate',
                request_serializer=krypton_dot_common_dot_message__pb2.TagsCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.tagsRead = channel.unary_unary(
                '/TagsService/tagsRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.TagsReadResponse.FromString,
                )
        self.tagsUpdate = channel.unary_unary(
                '/TagsService/tagsUpdate',
                request_serializer=krypton_dot_common_dot_message__pb2.TagsUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.tagsDelete = channel.unary_unary(
                '/TagsService/tagsDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.tagsList = channel.unary_unary(
                '/TagsService/tagsList',
                request_serializer=krypton_dot_common_dot_message__pb2.TagsListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.TagsListResponse.FromString,
                )
        self.tagsActivityLogList = channel.unary_unary(
                '/TagsService/tagsActivityLogList',
                request_serializer=krypton_dot_common_dot_message__pb2.TagsActivityLogListRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.TagsActivityLogListResponse.FromString,
                )


class TagsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def tagsCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tagsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tagsUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tagsDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tagsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tagsActivityLogList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'tagsCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsCreate,
                    request_deserializer=krypton_dot_common_dot_message__pb2.TagsCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'tagsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.TagsReadResponse.SerializeToString,
            ),
            'tagsUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsUpdate,
                    request_deserializer=krypton_dot_common_dot_message__pb2.TagsUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'tagsDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'tagsList': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.TagsListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.TagsListResponse.SerializeToString,
            ),
            'tagsActivityLogList': grpc.unary_unary_rpc_method_handler(
                    servicer.tagsActivityLogList,
                    request_deserializer=krypton_dot_common_dot_message__pb2.TagsActivityLogListRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.TagsActivityLogListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TagsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TagsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def tagsCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsCreate',
            krypton_dot_common_dot_message__pb2.TagsCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tagsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.TagsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tagsUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsUpdate',
            krypton_dot_common_dot_message__pb2.TagsUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tagsDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tagsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsList',
            krypton_dot_common_dot_message__pb2.TagsListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.TagsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tagsActivityLogList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TagsService/tagsActivityLogList',
            krypton_dot_common_dot_message__pb2.TagsActivityLogListRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.TagsActivityLogListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
