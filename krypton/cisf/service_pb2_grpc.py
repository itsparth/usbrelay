# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from krypton.cisf import message_pb2 as krypton_dot_cisf_dot_message__pb2
from krypton.common import message_pb2 as krypton_dot_common_dot_message__pb2


class EmployeeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.employeeCreate = channel.unary_unary(
                '/EmployeeService/employeeCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.employeeRead = channel.unary_unary(
                '/EmployeeService/employeeRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeReadResponse.FromString,
                )
        self.employeeUpdate = channel.unary_unary(
                '/EmployeeService/employeeUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.employeeUpdateRead = channel.unary_unary(
                '/EmployeeService/employeeUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeUpdateReadResponse.FromString,
                )
        self.employeeDelete = channel.unary_unary(
                '/EmployeeService/employeeDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.employeeList = channel.unary_unary(
                '/EmployeeService/employeeList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeListResponse.FromString,
                )


class EmployeeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def employeeCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def employeeRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def employeeUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def employeeUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def employeeDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def employeeList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmployeeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'employeeCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'employeeRead': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeReadResponse.SerializeToString,
            ),
            'employeeUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'employeeUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeUpdateReadResponse.SerializeToString,
            ),
            'employeeDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'employeeList': grpc.unary_unary_rpc_method_handler(
                    servicer.employeeList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.EmployeeListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.EmployeeListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'EmployeeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmployeeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def employeeCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeCreate',
            krypton_dot_cisf_dot_message__pb2.EmployeeCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def employeeRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.EmployeeReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def employeeUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeUpdate',
            krypton_dot_cisf_dot_message__pb2.EmployeeUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def employeeUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.EmployeeUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def employeeDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def employeeList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeService/employeeList',
            krypton_dot_cisf_dot_message__pb2.EmployeeListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.EmployeeListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DutyPostServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.dutyPostCreate = channel.unary_unary(
                '/DutyPostService/dutyPostCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.dutyPostRead = channel.unary_unary(
                '/DutyPostService/dutyPostRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostReadResponse.FromString,
                )
        self.dutyPostUpdate = channel.unary_unary(
                '/DutyPostService/dutyPostUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.dutyPostUpdateRead = channel.unary_unary(
                '/DutyPostService/dutyPostUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostUpdateReadResponse.FromString,
                )
        self.dutyPostDelete = channel.unary_unary(
                '/DutyPostService/dutyPostDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.dutyPostList = channel.unary_unary(
                '/DutyPostService/dutyPostList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostListResponse.FromString,
                )


class DutyPostServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def dutyPostCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dutyPostRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dutyPostUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dutyPostUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dutyPostDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dutyPostList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DutyPostServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'dutyPostCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'dutyPostRead': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostReadResponse.SerializeToString,
            ),
            'dutyPostUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'dutyPostUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostUpdateReadResponse.SerializeToString,
            ),
            'dutyPostDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'dutyPostList': grpc.unary_unary_rpc_method_handler(
                    servicer.dutyPostList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.DutyPostListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.DutyPostListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DutyPostService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DutyPostService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def dutyPostCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostCreate',
            krypton_dot_cisf_dot_message__pb2.DutyPostCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dutyPostRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.DutyPostReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dutyPostUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostUpdate',
            krypton_dot_cisf_dot_message__pb2.DutyPostUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dutyPostUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.DutyPostUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dutyPostDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dutyPostList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DutyPostService/dutyPostList',
            krypton_dot_cisf_dot_message__pb2.DutyPostListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.DutyPostListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class WeaponServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.weaponCreate = channel.unary_unary(
                '/WeaponService/weaponCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.WeaponCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.weaponRead = channel.unary_unary(
                '/WeaponService/weaponRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponReadResponse.FromString,
                )
        self.weaponUpdate = channel.unary_unary(
                '/WeaponService/weaponUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.WeaponUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.weaponUpdateRead = channel.unary_unary(
                '/WeaponService/weaponUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponUpdateReadResponse.FromString,
                )
        self.weaponDelete = channel.unary_unary(
                '/WeaponService/weaponDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.weaponList = channel.unary_unary(
                '/WeaponService/weaponList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.WeaponListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponListResponse.FromString,
                )


class WeaponServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def weaponCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WeaponServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'weaponCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'weaponRead': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.WeaponReadResponse.SerializeToString,
            ),
            'weaponUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'weaponUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.WeaponUpdateReadResponse.SerializeToString,
            ),
            'weaponDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'weaponList': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.WeaponListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'WeaponService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WeaponService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def weaponCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponCreate',
            krypton_dot_cisf_dot_message__pb2.WeaponCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.WeaponReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponUpdate',
            krypton_dot_cisf_dot_message__pb2.WeaponUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.WeaponUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponService/weaponList',
            krypton_dot_cisf_dot_message__pb2.WeaponListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.WeaponListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AmmoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ammoCreate = channel.unary_unary(
                '/AmmoService/ammoCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AmmoCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.ammoRead = channel.unary_unary(
                '/AmmoService/ammoRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoReadResponse.FromString,
                )
        self.ammoUpdate = channel.unary_unary(
                '/AmmoService/ammoUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AmmoUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.ammoUpdateRead = channel.unary_unary(
                '/AmmoService/ammoUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoUpdateReadResponse.FromString,
                )
        self.ammoDelete = channel.unary_unary(
                '/AmmoService/ammoDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.ammoList = channel.unary_unary(
                '/AmmoService/ammoList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AmmoListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoListResponse.FromString,
                )


class AmmoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ammoCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ammoRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ammoUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ammoUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ammoDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ammoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AmmoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ammoCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'ammoRead': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AmmoReadResponse.SerializeToString,
            ),
            'ammoUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'ammoUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AmmoUpdateReadResponse.SerializeToString,
            ),
            'ammoDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'ammoList': grpc.unary_unary_rpc_method_handler(
                    servicer.ammoList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AmmoListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AmmoListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AmmoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AmmoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ammoCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoCreate',
            krypton_dot_cisf_dot_message__pb2.AmmoCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ammoRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AmmoReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ammoUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoUpdate',
            krypton_dot_cisf_dot_message__pb2.AmmoUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ammoUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AmmoUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ammoDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ammoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AmmoService/ammoList',
            krypton_dot_cisf_dot_message__pb2.AmmoListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AmmoListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OtherItemsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.otherItemsCreate = channel.unary_unary(
                '/OtherItemsService/otherItemsCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.otherItemsRead = channel.unary_unary(
                '/OtherItemsService/otherItemsRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsReadResponse.FromString,
                )
        self.otherItemsUpdate = channel.unary_unary(
                '/OtherItemsService/otherItemsUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.otherItemsUpdateRead = channel.unary_unary(
                '/OtherItemsService/otherItemsUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateReadResponse.FromString,
                )
        self.otherItemsDelete = channel.unary_unary(
                '/OtherItemsService/otherItemsDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.otherItemsList = channel.unary_unary(
                '/OtherItemsService/otherItemsList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsListResponse.FromString,
                )


class OtherItemsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def otherItemsCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otherItemsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otherItemsUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otherItemsUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otherItemsDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otherItemsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OtherItemsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'otherItemsCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'otherItemsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsReadResponse.SerializeToString,
            ),
            'otherItemsUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'otherItemsUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateReadResponse.SerializeToString,
            ),
            'otherItemsDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'otherItemsList': grpc.unary_unary_rpc_method_handler(
                    servicer.otherItemsList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.OtherItemsListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.OtherItemsListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OtherItemsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OtherItemsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def otherItemsCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsCreate',
            krypton_dot_cisf_dot_message__pb2.OtherItemsCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otherItemsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.OtherItemsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otherItemsUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsUpdate',
            krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otherItemsUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.OtherItemsUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otherItemsDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otherItemsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OtherItemsService/otherItemsList',
            krypton_dot_cisf_dot_message__pb2.OtherItemsListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.OtherItemsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AssignmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.assignmentRead = channel.unary_unary(
                '/AssignmentService/assignmentRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AssignmentReadResponse.FromString,
                )
        self.assignmentUpdate = channel.unary_unary(
                '/AssignmentService/assignmentUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AssignmentUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.assignmentUpdateRead = channel.unary_unary(
                '/AssignmentService/assignmentUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AssignmentUpdateReadResponse.FromString,
                )
        self.assignmentDelete = channel.unary_unary(
                '/AssignmentService/assignmentDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )


class AssignmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def assignmentRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def assignmentUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def assignmentUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def assignmentDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssignmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'assignmentRead': grpc.unary_unary_rpc_method_handler(
                    servicer.assignmentRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AssignmentReadResponse.SerializeToString,
            ),
            'assignmentUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.assignmentUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AssignmentUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'assignmentUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.assignmentUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AssignmentUpdateReadResponse.SerializeToString,
            ),
            'assignmentDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.assignmentDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AssignmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssignmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def assignmentRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AssignmentService/assignmentRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AssignmentReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def assignmentUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AssignmentService/assignmentUpdate',
            krypton_dot_cisf_dot_message__pb2.AssignmentUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def assignmentUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AssignmentService/assignmentUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AssignmentUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def assignmentDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AssignmentService/assignmentDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ScheduleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.scheduleAssignmentsAdd = channel.unary_unary(
                '/ScheduleService/scheduleAssignmentsAdd',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsAddRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.scheduleAssignmentsList = channel.unary_unary(
                '/ScheduleService/scheduleAssignmentsList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListResponse.FromString,
                )
        self.shiftReport = channel.unary_unary(
                '/ScheduleService/shiftReport',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ShiftReportItemListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ShiftReportItemListResponse.FromString,
                )
        self.scheduleCreate = channel.unary_unary(
                '/ScheduleService/scheduleCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.scheduleRead = channel.unary_unary(
                '/ScheduleService/scheduleRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleReadResponse.FromString,
                )
        self.scheduleUpdate = channel.unary_unary(
                '/ScheduleService/scheduleUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.scheduleUpdateRead = channel.unary_unary(
                '/ScheduleService/scheduleUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleUpdateReadResponse.FromString,
                )
        self.scheduleDelete = channel.unary_unary(
                '/ScheduleService/scheduleDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.scheduleList = channel.unary_unary(
                '/ScheduleService/scheduleList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleListResponse.FromString,
                )


class ScheduleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def scheduleAssignmentsAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleAssignmentsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def shiftReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScheduleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'scheduleAssignmentsAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleAssignmentsAdd,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsAddRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'scheduleAssignmentsList': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleAssignmentsList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListResponse.SerializeToString,
            ),
            'shiftReport': grpc.unary_unary_rpc_method_handler(
                    servicer.shiftReport,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ShiftReportItemListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ShiftReportItemListResponse.SerializeToString,
            ),
            'scheduleCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'scheduleRead': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleReadResponse.SerializeToString,
            ),
            'scheduleUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'scheduleUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleUpdateReadResponse.SerializeToString,
            ),
            'scheduleDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'scheduleList': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ScheduleListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ScheduleListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ScheduleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ScheduleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def scheduleAssignmentsAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleAssignmentsAdd',
            krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsAddRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleAssignmentsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleAssignmentsList',
            krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ScheduleAssignmentsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def shiftReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/shiftReport',
            krypton_dot_cisf_dot_message__pb2.ShiftReportItemListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ShiftReportItemListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleCreate',
            krypton_dot_cisf_dot_message__pb2.ScheduleCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ScheduleReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleUpdate',
            krypton_dot_cisf_dot_message__pb2.ScheduleUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ScheduleUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ScheduleService/scheduleList',
            krypton_dot_cisf_dot_message__pb2.ScheduleListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ScheduleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class WeaponAmmoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.weaponAmmoRead = channel.unary_unary(
                '/WeaponAmmoService/weaponAmmoRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoReadResponse.FromString,
                )
        self.weaponAmmoUpdate = channel.unary_unary(
                '/WeaponAmmoService/weaponAmmoUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.weaponAmmoUpdateRead = channel.unary_unary(
                '/WeaponAmmoService/weaponAmmoUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateReadResponse.FromString,
                )
        self.weaponAmmoDelete = channel.unary_unary(
                '/WeaponAmmoService/weaponAmmoDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )


class WeaponAmmoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def weaponAmmoRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponAmmoUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponAmmoUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def weaponAmmoDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WeaponAmmoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'weaponAmmoRead': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponAmmoRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoReadResponse.SerializeToString,
            ),
            'weaponAmmoUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponAmmoUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'weaponAmmoUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponAmmoUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateReadResponse.SerializeToString,
            ),
            'weaponAmmoDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.weaponAmmoDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'WeaponAmmoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WeaponAmmoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def weaponAmmoRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponAmmoService/weaponAmmoRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.WeaponAmmoReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponAmmoUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponAmmoService/weaponAmmoUpdate',
            krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponAmmoUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponAmmoService/weaponAmmoUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.WeaponAmmoUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def weaponAmmoDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WeaponAmmoService/weaponAmmoDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GlobalConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.globalConfigCreate = channel.unary_unary(
                '/GlobalConfigService/globalConfigCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.globalConfigRead = channel.unary_unary(
                '/GlobalConfigService/globalConfigRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigReadResponse.FromString,
                )
        self.globalConfigUpdate = channel.unary_unary(
                '/GlobalConfigService/globalConfigUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.globalConfigUpdateRead = channel.unary_unary(
                '/GlobalConfigService/globalConfigUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateReadResponse.FromString,
                )
        self.globalConfigDelete = channel.unary_unary(
                '/GlobalConfigService/globalConfigDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.globalConfigList = channel.unary_unary(
                '/GlobalConfigService/globalConfigList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigListResponse.FromString,
                )


class GlobalConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def globalConfigCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def globalConfigRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def globalConfigUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def globalConfigUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def globalConfigDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def globalConfigList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GlobalConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'globalConfigCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'globalConfigRead': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigReadResponse.SerializeToString,
            ),
            'globalConfigUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'globalConfigUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateReadResponse.SerializeToString,
            ),
            'globalConfigDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'globalConfigList': grpc.unary_unary_rpc_method_handler(
                    servicer.globalConfigList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.GlobalConfigListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GlobalConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GlobalConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def globalConfigCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigCreate',
            krypton_dot_cisf_dot_message__pb2.GlobalConfigCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def globalConfigRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.GlobalConfigReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def globalConfigUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigUpdate',
            krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def globalConfigUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.GlobalConfigUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def globalConfigDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def globalConfigList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GlobalConfigService/globalConfigList',
            krypton_dot_cisf_dot_message__pb2.GlobalConfigListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.GlobalConfigListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FlowAlertsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.flowAlertsRead = channel.unary_unary(
                '/FlowAlertsService/flowAlertsRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsReadResponse.FromString,
                )
        self.flowAlertsUpdate = channel.unary_unary(
                '/FlowAlertsService/flowAlertsUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.flowAlertsUpdateRead = channel.unary_unary(
                '/FlowAlertsService/flowAlertsUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateReadResponse.FromString,
                )
        self.flowAlertsDelete = channel.unary_unary(
                '/FlowAlertsService/flowAlertsDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )


class FlowAlertsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def flowAlertsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowAlertsUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowAlertsUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowAlertsDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlowAlertsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'flowAlertsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.flowAlertsRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsReadResponse.SerializeToString,
            ),
            'flowAlertsUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.flowAlertsUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'flowAlertsUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.flowAlertsUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateReadResponse.SerializeToString,
            ),
            'flowAlertsDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.flowAlertsDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FlowAlertsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlowAlertsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def flowAlertsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowAlertsService/flowAlertsRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowAlertsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowAlertsUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowAlertsService/flowAlertsUpdate',
            krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowAlertsUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowAlertsService/flowAlertsUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowAlertsUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowAlertsDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowAlertsService/flowAlertsDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FlowsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.flowsCreate = channel.unary_unary(
                '/FlowsService/flowsCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.FlowsCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.flowsRead = channel.unary_unary(
                '/FlowsService/flowsRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.FromString,
                )
        self.flowsUpdate = channel.unary_unary(
                '/FlowsService/flowsUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.FlowsUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.flowsUpdateRead = channel.unary_unary(
                '/FlowsService/flowsUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsUpdateReadResponse.FromString,
                )
        self.flowsDelete = channel.unary_unary(
                '/FlowsService/flowsDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.flowsList = channel.unary_unary(
                '/FlowsService/flowsList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.FlowsListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsListResponse.FromString,
                )
        self.flowsOnScan = channel.unary_unary(
                '/FlowsService/flowsOnScan',
                request_serializer=krypton_dot_cisf_dot_message__pb2.FlowsOnScanRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsOnScanResponse.FromString,
                )
        self.flowsListen = channel.unary_stream(
                '/FlowsService/flowsListen',
                request_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.FromString,
                )


class FlowsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def flowsCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsOnScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flowsListen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlowsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'flowsCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'flowsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.SerializeToString,
            ),
            'flowsUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'flowsUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowsUpdateReadResponse.SerializeToString,
            ),
            'flowsDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'flowsList': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowsListResponse.SerializeToString,
            ),
            'flowsOnScan': grpc.unary_unary_rpc_method_handler(
                    servicer.flowsOnScan,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.FlowsOnScanRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowsOnScanResponse.SerializeToString,
            ),
            'flowsListen': grpc.unary_stream_rpc_method_handler(
                    servicer.flowsListen,
                    request_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FlowsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlowsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def flowsCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsCreate',
            krypton_dot_cisf_dot_message__pb2.FlowsCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsUpdate',
            krypton_dot_cisf_dot_message__pb2.FlowsUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowsUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsList',
            krypton_dot_cisf_dot_message__pb2.FlowsListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsOnScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FlowsService/flowsOnScan',
            krypton_dot_cisf_dot_message__pb2.FlowsOnScanRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowsOnScanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flowsListen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FlowsService/flowsListen',
            krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.FlowsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AlertsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.alertsCreate = channel.unary_unary(
                '/AlertsService/alertsCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AlertsCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.alertsRead = channel.unary_unary(
                '/AlertsService/alertsRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AlertsReadResponse.FromString,
                )
        self.alertsList = channel.unary_unary(
                '/AlertsService/alertsList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AlertsListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AlertsListResponse.FromString,
                )


class AlertsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def alertsCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def alertsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def alertsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlertsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'alertsCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.alertsCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AlertsCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'alertsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.alertsRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AlertsReadResponse.SerializeToString,
            ),
            'alertsList': grpc.unary_unary_rpc_method_handler(
                    servicer.alertsList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AlertsListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AlertsListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AlertsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlertsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def alertsCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AlertsService/alertsCreate',
            krypton_dot_cisf_dot_message__pb2.AlertsCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def alertsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AlertsService/alertsRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AlertsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def alertsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AlertsService/alertsList',
            krypton_dot_cisf_dot_message__pb2.AlertsListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AlertsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.userCreate = channel.unary_unary(
                '/UserService/userCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.UserCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.userRead = channel.unary_unary(
                '/UserService/userRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.UserReadResponse.FromString,
                )
        self.userUpdate = channel.unary_unary(
                '/UserService/userUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.UserUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.userUpdateRead = channel.unary_unary(
                '/UserService/userUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.UserUpdateReadResponse.FromString,
                )
        self.userDelete = channel.unary_unary(
                '/UserService/userDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.userList = channel.unary_unary(
                '/UserService/userList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.UserListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.UserListResponse.FromString,
                )
        self.userCreateSuper = channel.unary_unary(
                '/UserService/userCreateSuper',
                request_serializer=krypton_dot_cisf_dot_message__pb2.UserCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def userCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userCreateSuper(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'userCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.userCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.UserCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'userRead': grpc.unary_unary_rpc_method_handler(
                    servicer.userRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.UserReadResponse.SerializeToString,
            ),
            'userUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.userUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.UserUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'userUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.userUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.UserUpdateReadResponse.SerializeToString,
            ),
            'userDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.userDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'userList': grpc.unary_unary_rpc_method_handler(
                    servicer.userList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.UserListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.UserListResponse.SerializeToString,
            ),
            'userCreateSuper': grpc.unary_unary_rpc_method_handler(
                    servicer.userCreateSuper,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.UserCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def userCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userCreate',
            krypton_dot_cisf_dot_message__pb2.UserCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.UserReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userUpdate',
            krypton_dot_cisf_dot_message__pb2.UserUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.UserUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userList',
            krypton_dot_cisf_dot_message__pb2.UserListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.UserListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userCreateSuper(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/userCreateSuper',
            krypton_dot_cisf_dot_message__pb2.UserCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AccessControlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.accessControlCreate = channel.unary_unary(
                '/AccessControlService/accessControlCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.accessControlRead = channel.unary_unary(
                '/AccessControlService/accessControlRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlReadResponse.FromString,
                )
        self.accessControlUpdate = channel.unary_unary(
                '/AccessControlService/accessControlUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.accessControlUpdateRead = channel.unary_unary(
                '/AccessControlService/accessControlUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlUpdateReadResponse.FromString,
                )
        self.accessControlDelete = channel.unary_unary(
                '/AccessControlService/accessControlDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.accessControlList = channel.unary_unary(
                '/AccessControlService/accessControlList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlListResponse.FromString,
                )


class AccessControlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def accessControlCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def accessControlRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def accessControlUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def accessControlUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def accessControlDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def accessControlList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccessControlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'accessControlCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'accessControlRead': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlReadResponse.SerializeToString,
            ),
            'accessControlUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'accessControlUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlUpdateReadResponse.SerializeToString,
            ),
            'accessControlDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'accessControlList': grpc.unary_unary_rpc_method_handler(
                    servicer.accessControlList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.AccessControlListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.AccessControlListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AccessControlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccessControlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def accessControlCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlCreate',
            krypton_dot_cisf_dot_message__pb2.AccessControlCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def accessControlRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AccessControlReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def accessControlUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlUpdate',
            krypton_dot_cisf_dot_message__pb2.AccessControlUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def accessControlUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AccessControlUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def accessControlDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def accessControlList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AccessControlService/accessControlList',
            krypton_dot_cisf_dot_message__pb2.AccessControlListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.AccessControlListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ResourceGroupServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.resourceGroupCreate = channel.unary_unary(
                '/ResourceGroupService/resourceGroupCreate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupCreateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.resourceGroupRead = channel.unary_unary(
                '/ResourceGroupService/resourceGroupRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupReadResponse.FromString,
                )
        self.resourceGroupUpdate = channel.unary_unary(
                '/ResourceGroupService/resourceGroupUpdate',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateRequest.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                )
        self.resourceGroupUpdateRead = channel.unary_unary(
                '/ResourceGroupService/resourceGroupUpdateRead',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateReadResponse.FromString,
                )
        self.resourceGroupDelete = channel.unary_unary(
                '/ResourceGroupService/resourceGroupDelete',
                request_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
                response_deserializer=krypton_dot_common_dot_message__pb2.OkMessage.FromString,
                )
        self.resourceGroupList = channel.unary_unary(
                '/ResourceGroupService/resourceGroupList',
                request_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupListRequest.SerializeToString,
                response_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupListResponse.FromString,
                )


class ResourceGroupServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def resourceGroupCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resourceGroupRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resourceGroupUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resourceGroupUpdateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resourceGroupDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resourceGroupList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceGroupServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'resourceGroupCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupCreate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupCreateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'resourceGroupRead': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupReadResponse.SerializeToString,
            ),
            'resourceGroupUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupUpdate,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateRequest.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            ),
            'resourceGroupUpdateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupUpdateRead,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateReadResponse.SerializeToString,
            ),
            'resourceGroupDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupDelete,
                    request_deserializer=krypton_dot_common_dot_message__pb2.IdMessage.FromString,
                    response_serializer=krypton_dot_common_dot_message__pb2.OkMessage.SerializeToString,
            ),
            'resourceGroupList': grpc.unary_unary_rpc_method_handler(
                    servicer.resourceGroupList,
                    request_deserializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupListRequest.FromString,
                    response_serializer=krypton_dot_cisf_dot_message__pb2.ResourceGroupListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ResourceGroupService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ResourceGroupService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def resourceGroupCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupCreate',
            krypton_dot_cisf_dot_message__pb2.ResourceGroupCreateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resourceGroupRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ResourceGroupReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resourceGroupUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupUpdate',
            krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateRequest.SerializeToString,
            krypton_dot_common_dot_message__pb2.IdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resourceGroupUpdateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupUpdateRead',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ResourceGroupUpdateReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resourceGroupDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupDelete',
            krypton_dot_common_dot_message__pb2.IdMessage.SerializeToString,
            krypton_dot_common_dot_message__pb2.OkMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resourceGroupList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ResourceGroupService/resourceGroupList',
            krypton_dot_cisf_dot_message__pb2.ResourceGroupListRequest.SerializeToString,
            krypton_dot_cisf_dot_message__pb2.ResourceGroupListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
